apiVersion: v1
kind: Namespace
metadata: 
  name: grace-dev

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: grace-environment
data:
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_HTTP_PORTS: "5000"
  ASPNETCORE_HTTPS_PORTS: "5001"
  ASPNETCORE_URLS: https://+:5001;http://+:5000
  # ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
  # ASPNETCORE_Kestrel__Certificates__Default__Password: CrypticPassword8=5
  APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=e0955eb4-1817-4a94-bf6e-d48f6ae54a8c;IngestionEndpoint=https://westus2-2.in.applicationinsights.azure.com/"
  # Azure_CosmosDB_Connection_String: "AccountEndpoint=https://localhost:8081/;AccountKey=C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==" # This is a well-known default key.
  DAPR_APP_PORT: "5000"
  DAPR_HTTP_PORT: "3500"
  DAPR_GRPC_PORT: "50001"
  DAPR_SERVER_URI: http://127.0.0.1
  Logging__LogLevel__Default: "Information"
  #Logging__LogLevel__Default: "Debug"
  TEMP: /tmp

---

apiVersion: v1
kind: Service
metadata:
  name: grace-server
  labels:
    app: grace-server
spec:
  type: LoadBalancer
  #externalIPs:
  #- 192.168.1.209
  ports:
  - name: http
    port: 5000
    targetPort: http-grace
  - name: https
    port: 5001
    targetPort: https-grace
  - name: zipkin
    port: 9412
    targetPort: 9412
  - name: prometheus
    port: 9090
    targetPort: 9090
  - name: grafana
    port: 3000
    targetPort: 3000
  selector:
    app: grace-server

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grace-server
  labels:
    app: grace-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grace-server
  template:
    metadata:
      labels:
        app: grace-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        dapr.io/enabled: "true"
        dapr.io/app-id: "grace-server"
        dapr.io/app-port: "5000"
        dapr.io/enable-metrics: "true"
        #dapr.io/env: "GOMEMLIMIT=700MiB"
        dapr.io/log-level: "debug"
        dapr.io/metrics-exporter-type: "prometheus"
        dapr.io/metrics-port: "9090"  # Ensure this matches the port exposed by the Prometheus exporter in the OpenTelemetry Collector configuration
        #dapr.io/placement-host-address: "127.0.0.1:50005"
        dapr.io/sidecar-cpu-limit: "1.0"
        dapr.io/sidecar-memory-limit: "768Mi"
        dapr.io/sidecar-cpu-request: "0.25"
        dapr.io/sidecar-memory-request: "256Mi"
    spec:
      volumes:
      - name: dapr-config
        hostPath:
          path: /mnt/c/Users/Scott/.dapr/
          type: Directory
      - name: secret-volume
        secret:
          secretName: gracedevcert
      - name: otel-collector-config
        configMap:
          name: otel-collector-config
      - name: prometheus-config
        configMap:
          name: prometheus-config
      containers:
      - name: grace-server
        image: scottarbeit/grace-server:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http-grace
          protocol: TCP
        - containerPort: 5001
          name: https-grace
          protocol: TCP
        volumeMounts:
        - name: secret-volume
          mountPath: /etc/certificates
          readOnly: true
        - name: otel-collector-config
          mountPath: /etc/otel/config.yaml
          readOnly: true
        # volumeMounts:
        #   - name: dapr-config
        #     mountPath: /dapr/
        #     readOnly: true
        resources:
          limits:
            cpu: "4"
            memory: "8192Mi"
          requests:
            cpu: "4"
            memory: "8192Mi"
        envFrom:
        - configMapRef:
            name: grace-environment
        env:
        - name: azurestorageconnectionstring
          valueFrom:
            secretKeyRef:
              name: azurestorageconnectionstring
              key: azurestorageconnectionstring
        - name: azurestoragekey
          valueFrom:
            secretKeyRef:
              name: azurestoragekey
              key: azurestoragekey
        - name: azurecosmosdbconnectionstring
          valueFrom:
            secretKeyRef:
              name: azurecosmosdbconnectionstring
              key: azurecosmosdbconnectionstring
        - name: cosmosdatabasename
          valueFrom:
            secretKeyRef:
              name: cosmosdatabasename
              key: cosmosdatabasename
        - name: cosmoscontainername
          valueFrom:
            secretKeyRef:
              name: cosmoscontainername
              key: cosmoscontainername
      - name: opentelemetry-collector
        image: otel/opentelemetry-collector:latest
        env:
        - name: APPLICATIONINSIGHTS_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: applicationinsightsconnectionstring
              key: applicationinsightsconnectionstring
        ports:
        - containerPort: 4317 # gRPC port for traces
          protocol: TCP
        - containerPort: 4318 # HTTP port for traces and metrics
          protocol: TCP
        - containerPort: 55681 # HTTP port for logs (OTLP/HTTP)
          protocol: TCP
        volumeMounts:
        - name: otel-collector-config
          mountPath: /etc/otel/collector
          readOnly: true
        resources:
          limits:
            cpu: "2.0"
            memory: "1Gi"
          requests:
            cpu: "0.25"
            memory: "256Mi"
      - name: zipkin
        image: openzipkin/zipkin:latest
        ports:
        - containerPort: 9412
          name: zipkin
          protocol: TCP
        env:
          - name: SERVER_PORT
            value: "9412"
        resources:
          limits:
            cpu: "2.0"
            memory: "1Gi"
          requests:
            cpu: "0.25"
            memory: "256Mi"
      # - name: prometheus
      #   image: prom/prometheus:latest
      #   ports:
      #   - containerPort: 9090
      #     name: prometheus
      #     protocol: TCP
      #   volumeMounts:
      #   - name: prometheus-config
      #     mountPath: /etc/prometheus
      #     readOnly: true
      #   resources:
      #     limits:
      #       cpu: "2.0"
      #       memory: "1Gi"
      #     requests:
      #       cpu: "0.25"
      #       memory: "400Mi"
      # - name: grafana
      #   image: grafana/grafana:latest
      #   ports:
      #   - containerPort: 3000
      #     name: grafana
      #     protocol: TCP
      #   resources:
      #     limits:
      #       cpu: "2.0"
      #       memory: "1Gi"
      #     requests:
      #       cpu: "0.25"
      #       memory: "400Mi"
